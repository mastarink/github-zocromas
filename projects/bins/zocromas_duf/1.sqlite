.nullvalue <NULL>
.headers off
.width 100
/* select all dirs under dir with id=15 */
WITH RECURSIVE cte_paths(rowid,parentid) AS  (
  SELECT pt.rowid,pt.parentid
    FROM main.paths  AS pt 
    WHERE parentid=15
    UNION
      SELECT ptu.rowid,ptu.parentid
        FROM cte_paths
	JOIN main.paths AS ptu ON( ptu.parentid=cte_paths.rowid )
	)
SELECT /* pt.rowid, pte.rowid, */pt.dir_name 
  FROM cte_paths  AS pte
  LEFT JOIN main.paths AS pt ON (pte.rowid=pt.rowid)


/*  LEFT JOIN  ( SELECT parents.rowid AS Pathid, COUNT( * ) AS numdirs
	    FROM main.paths AS pts
	    LEFT JOIN main.paths AS ptsp ON( pts.parentid = ptsp.rowid )
	    JOIN main.paths AS parents ON( parents.rowid = ptsp.parentid )
	    GROUP BY parents.rowid)
       AS td ON (td.Pathid=pt.rowid)
  LEFT JOIN  ( SELECT fn.Pathid AS Pathid, COUNT(*) AS numfiles, min( size ) AS minsize, max( size ) AS maxsize
	    FROM main.filenames AS fn
	    LEFT JOIN main.filedatas AS fd ON( fn.dataid = fd.rowid )
	    GROUP BY fn.Pathid )
       AS tf ON (tf.Pathid=pt.rowid)
       */
       ;
.width 6, 100
/*
WITH RECURSIVE cte_paths(rowid,parentid) AS  (
  SELECT pt.rowid,pt.parentid
    FROM main.paths  AS pt 
    WHERE pt.parentid=49 OR pt.rowid=49
    UNION
      SELECT ptu.rowid,ptu.parentid
        FROM cte_paths
	JOIN main.paths AS ptu ON( ptu.parentid=cte_paths.rowid )
	)
SELECT fn.rowid AS fnid, fn.file_name
  FROM cte_paths  AS pte
  LEFT JOIN main.filenames AS fn ON (pte.rowid=fn.Pathid);
*/

/*
vi: ft=sql
*/
